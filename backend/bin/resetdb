#!/usr/bin/env bash

set -eo pipefail
cd "$(dirname "${BASH_SOURCE[0]}")/.."
source .env

# terminate all connections to the db
docker-compose exec -T -e PGUSER="$POSTGRES_USER" postgres psql -c "SELECT pg_terminate_backend(pid) FROM pg_stat_activity WHERE datname = '$POSTGRES_DB' AND pid <> pg_backend_pid()" || :

# drop current database
docker-compose exec -T -e PGUSER="$POSTGRES_USER" postgres dropdb --echo --if-exists "$POSTGRES_DB"

# create db
docker-compose exec -T -e PGUSER="$POSTGRES_USER" postgres createdb --echo "$POSTGRES_DB"

# run migrations
venv/bin/python src/manage.py migrate

# create admin
venv/bin/python src/manage.py shell -c "from django.contrib.auth.models import User; User.objects.create_superuser('admin', password='admin')"

# fetch and load IMDb's data dump
venv/bin/python src/manage.py imdb_reload_data
